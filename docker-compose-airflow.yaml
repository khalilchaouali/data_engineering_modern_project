version: '3.5'
x-airflow-common:
  &airflow-common
#  image: apache/airflow:latest
  build: .
  environment:
    &airflow-common-env
    ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
    INTEGRATION_MONGO: ${INTEGRATION_MONGO}
    AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: ${AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION}
    AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
    AIRFLOW_CONN_AWS_DEFAULT: ${AIRFLOW_CONN_AWS_DEFAULT}
    AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: ${AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT}
    AIRFLOW_CONN_MONGO_DEFAULT: ${AIRFLOW_CONN_MONGO_DEFAULT}
    AIRFLOW__API__AUTH_BACKEND: ${AIRFLOW__API__AUTH_BACKEND}
  volumes:
    - ./creds:/opt/airflow/creds
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./airflow.cfg:/opt/airlfow/airflow.cfg
    - ./src:/opt/airflow/src
    - ./dbt:/opt/airflow/dbt
  user: "0:0"
  command: -c "pip3 install apache-airflow-providers-mongo==1.0.0b1 --user"
  depends_on:
    - postgres
    - mongo
  links:
    - mongo

services:
  mongo:
    image: mongo
    container_name: 'mongo'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - ./data:/data/db

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 60s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      - airflow-webserver

  airflow-init:
    <<: *airflow-common
    command: version
    depends_on:
      - airflow-webserver
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: ${_AIRFLOW_DB_UPGRADE}
      _AIRFLOW_WWW_USER_CREATE: ${_AIRFLOW_WWW_USER_CREATE}
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD}